#############################################################################################################################
# cloudtrail.conf
#
#  .SYNOPSIS
#     Logstash config file for parsing cloudtrail json logs
#
#  .DESCRIPTION
#.      This logstash configuration file helps to parse cloudtrail logs in Json format  
#
#  .PREREQUISITES
#       1. Json export of cloudtrail logs
#       2. follow the log extraction guide to avoid parsing issues with this configuration file
#
#   .Patterns supported
#       1. {"Records":[{"eventVersion":....}}}]}
#
#   .LINK
#.      https://github.com/zf-dfir/IR_General/blob/main/AWS/cloudtrail.conf
#
#   .Troubleshooting
#	Incase of heap error processing large cloudtraillogs use "export LS_JAVA_OPTS="-Xmx4g -Xms2g"" option to define new
#	min and mx memory ranges to support large file processing on logstash server.
#
#.      Author: Balasubramanya Chandrashekar
#       Organization: ZeroFox
#       Date: 2023-01-31
#       Version: 1.0
############################################################################################################################


input {
	file {
		path => "/path/to/AWS/*.json"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		type => "cloudtrail"
		codec => "json"
	}
}

filter {
	json {
		source => "message"
		}		

	split {
		field => "Records"
	}

	geoip {
		source => "[Records][sourceIPAddress]"
		target => "geoip"
		add_tag => [ "cloudtrail-geoip" ]
	}
	mutate {
		rename => {
			"[Records][userAgent]" => "UserAgent"
			"[Records][sourceIPAddress]" => "sourceIPAddress"
			"[Records][awsRegion]" => "AWSRegion"
			"[Records][eventName]" => "EventName"
			"[Records][eventSource]" => "EventSource"
			"[Records][eventTime]" => "EventTime"
			"[Records][errorCode]" => "ErrorCode"
			"[Records][userIdentity][type]" => "IdentityType"
			"[Records][userIdentity][userName]" => "UserName"
			"[Records][userIdentity][arn]" => "IdentityARN"
			"[Records][userIdentity][principalId]" => "PrincipalID"
			"[Records][userIdentity][sessionContext][sessionIssuer][userName]" => "SessionIssuerUserName"
			"[Records][responseElements][ConsoleLogin]" => "ConsoleLoginOutcome"
			"[Records][errorMessage]" => "ErrorMessage"
			"[Records][eventID]" => "EventID"
			"[Records][eventType]" => "EventType"
			"[Records][eventVersion]" => "EventVersion"
			"[Records][recipientAccountId]" => "RecipientAccountId"
			"[Records][requestParameters][instancesSet][items][imageId]" => "ImageId"
			"[Records][requestParameters][instanceType]" => "InstanceType"
			"[Records][requestParameters][logGroupName]" => "LogGroupName"
			"[Records][requestParameters][roleArn]" => "RoleARN"
			"[Records][requestParameters][roleSessionName]" => "RoleSessionName"
			"[Records][requestParameters][tagSpecificationSet][items][resourceType]" => "TargetResourceType"
			"[Records][requestParameters][userData]" => "RequestUserData"
			"[Records][resources][accountId]" => "AccountID"
			"[Records][resources][ARN]" => "ResourceARN"
			"[Records][resources][type]" => "ResourceType"
			"[Records][userIdentity][sessionContext][attributes][mfaAuthenticated]" => "MFAAuthenticated"
			"[Records][additionalEventData][MFAUsed]" => "MFAUsed"
			"[geoip][geo][country_name]" => "SourceIPCountryName"
			"[geoip][geo][country_iso_code]" => "SourceIPCountryCode"
		}

	}
	
  	if [sourceIPAddress] !~ "^(10\.|172\.(1[6-9]|2[0-9]|3[01])\.|192\.168\.)" {
    		http { 
     		url => "https://otx.alienvault.com/api/v1/indicators/IPv4/%{sourceIPAddress}/"
      		headers => {"X-OTX-API-KEY" => "<API Key>"}
      		target_body => "[ipreputation]"
    		}
  	}
	
	mutate {
		remove_field => ["message","event"]
	}
}

output {
    elasticsearch{
      hosts => "ES url"
      ssl => "false"
      ssl_certificate_verification => "false"
      user => "<user>"
      password => "<password>"
      index => logs
  }
  stdout {}
}
