#############################################################################################################################
# plaso.conf
#
#  .SYNOPSIS
#     Logstash config file for parsing plaso output from host
#
#  .DESCRIPTION
#      This logstash configuration file helps to parse plaso logs in CSV format  
#
#  .PREREQUISITES
#       1. Plaso output in CSV format
#       2. CSV columns supported "date","time","timezone","macb","source","sourcetype","eventtype","user","host","short","desc","version","filename","inode","notes","format","extra"
#
#
#   .Troubleshooting
#	Incase of heap error processing large files use "export LS_JAVA_OPTS="-Xmx4g -Xms2g"" option to define new
#	min and mx memory ranges to support large file processing on logstash server.
#
#     	Author: Balasubramanya Chandrashekar
#       Date: 2023-03-13
#       Version: 1.0
############################################################################################################################

input {
	file {
		path => "/path/to/*.csv"
		type => "l2tcsv"
		start_position => "beginning"
		sincedb_path => "/dev/null"
	}
}

filter {
  if [type] == "l2tcsv" {
    csv { 
       separator => ","
       quote_char => "Âª"       # workaround: don't use a quote character as " gives issues if the field contains a "
       columns => ["date","time","timezone","macb","source","sourcetype","eventtype","user","host","short","desc","version","filename","inode","notes","format","extra"]
    }
    
    mutate { merge => ["date", "time"] }       # merge and join need to be in separate mutates
    mutate { merge => ["date", "timezone"] }   # merge and join need to be in separate mutates
    mutate { join => ["date", " "] }           # merge and join need to be in separate mutates
    date { 
      match => ["date", "MM/dd/YYYY HH:mm:ss z" ] 
    }

    # extract macb info
    if ("M" in [macb]) { mutate { add_tag => ["modified"] } }
    if ("A" in [macb]) { mutate { add_tag => ["accessed"] } }
    if ("C" in [macb]) { mutate { add_tag => ["changed"] } }
    if ("B" in [macb]) { mutate { add_tag => ["birth"] } }
    
    # Extract urls
    if [source] == "WEBHIST" {
      grok { match => ["desc", "URL: (?<extracted_url>.*?)[ $].*"] }
    }

    # Extract extensions from Filename
    grok {match => ["filename","(?<extracted_ext>\.\w+)(?=\b|$)"]}
    
    mutate {
      convert => ["inode", "integer",
                  "version", "integer"] 
      lowercase => ["extracted_ext"]
      remove_field => ["event", "message","date", "short", "time", "timezone"]
    }
  }
}


output {
	if [type] == "l2tcsv" {
    	elasticsearch {
    		hosts => "https://localhost:9200"
    		ssl => "false"
   			ssl_certificate_verification => "false"
    		user => "user"
    		password => "password"
      		index => "logstash-l2tcsv"
    	}
  	}
	stdout{}
}
