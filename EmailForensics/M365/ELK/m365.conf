#############################################################################################################################
# 
# m365.conf
#
#  .SYNOPSIS
#     This logstash config file parses the M365 Auditlog 
#
#  .DESCRIPTION
#.      This logstash file uses json filter to parse the M365 audit logs in .json file formats. 
#
#  .EXAMPLE 
#.      /logstash -f /path/to/m365.conf -r
#
#
#  .PREREQUISITES
#       1. privilege to execute logstash files
#       2. API token for threat intel lookup
#
#   .NOTES
#.      Author: Balasubramanya Chandrashekar
#       Version: 1.0
#       Date: 2022-12-23
#
############################################################################################################################


input {
	file {
		path => "/path/to/m365/*.json"
    	start_position => "beginning"
    	sincedb_path => "/dev/null"
    	codec => json
	}
}
filter {
	json {
		source => "message"
	}
	#This filter allows you to remove unnecessary fields from being displayed.
	mutate{
		remove_field => ["event","@version"] #unwanted fields can be removed as necessary
	}
	geoip{
		source => "ActorIpAddress"
		target => "geo"
	}
	# This section helps to lookup for threat intel against IPv4 field from log samples. some sites may have ratelimiting on number of lookups allowed. take a note of this while using in live scenarios.
	
	if [clientip] !~ "^(10\.|172\.(1[6-9]|2[0-9]|3[01])\.|192\.168\.)" {
    http { 
      url => "https://otx.alienvault.com/api/v1/indicators/IPv4/%{ActorIpAddress}/"
      headers => {
       "X-OTX-API-KEY" => "API key here"
      }
      target_body => "[ipreputation]"
    }
  }
}
output {
	elasticsearch{
		hosts => "https://localhost:9200"
		ssl => "true"
		ssl_certificate_verification => "false"
		user => "<userName>"
		password => "<Password>"
		index => test #Index name can be change based on the requirement
	}
	stdout {}
}
